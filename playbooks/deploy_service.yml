---
- name: Openshift integration 
  hosts: localhost
  tasks:
   - name: Create a Service for Redis Leader application
     redhat.openshift.k8s:
       state: present   
       definition:
         apiVersion: v1
         kind: Service
         metadata:
           name: redis-leader
           namespace: guestbook
           labels:
             app: redis
             tier: backend
             role: leader
         spec:
           ports:
           - port: 6379
             targetPort: 6379
           selector:
             app: redis
             tier: backend
             role: leader
     # delegate_to: localhost
   - name: Create service for Redis-Follower
     redhat.openshift.k8s:
       state: present   
       definition:
         apiVersion: v1
         kind: Service
         metadata:
           name: redis-follower
           namespace: guestbook           
           labels:
             app: redis
             tier: backend
             role: follower
         spec:
           ports:
           - port: 6379
           selector:
             app: redis
             tier: backend
             role: follower
     # delegate_to: localhost
   - name: Create Deployment for Redis Follower
     redhat.openshift.k8s:
       state: present   
       definition:
         apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
         kind: Deployment
         metadata:
           name: redis-follower
           namespace: guestbook             
         spec:
           selector:
             matchLabels:
               app: redis
               role: follower
               tier: backend
           replicas: 2
           template:
             metadata:
               labels:
                 app: redis
                 role: follower
                 tier: backend
             spec:
               containers:
               - name: follower
                 image: gcr.io/google_samples/gb-redisslave:v1
                 resources:
                   requests:
                     cpu: 100m
                     memory: 100Mi
                 env:
                 - name: GET_HOSTS_FROM
                   value: dns
                 ports:
                 - containerPort: 6379
     # delegate_to: localhost
   - name: Create service for front end application
     redhat.openshift.k8s:
       state: present   
       definition:
         apiVersion: v1
         kind: Service
         metadata:
           name: frontend
           namespace: guestbook            
           labels:
             app: guestbook
             tier: frontend
         spec:
  # comment or delete the following line if you want to use a LoadBalancer
           type: NodePort 
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
           ports:
           - port: 80
           selector:
             app: guestbook
             tier: frontend
     # delegate_to: localhost
   - name: Deploy front end application
     redhat.openshift.k8s:
       state: present   
       definition:
         apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
         kind: Deployment
         metadata:
           name: frontend
           namespace: guestbook            
         spec:
           selector:
             matchLabels:
               app: guestbook
               tier: frontend
           replicas: 3
           template:
             metadata:
               labels:
                 app: guestbook
                 tier: frontend
             spec:
               containers:
               - name: php-redis
                 image: gcr.io/google-samples/gb-frontend:v4
                 resources:
                   requests:
                     cpu: 100m
                     memory: 100Mi
                 env:
                 - name: GET_HOSTS_FROM
                   value: dns
          # If your cluster config does not include a dns service, then to
          # instead access environment variables to find service host
          # info, comment out the 'value: dns' line above, and uncomment the
          # line below:
          # value: env
                 ports:
                 - containerPort: 80
     # delegate_to: localhost 
   - name: Create route for front end application
     redhat.openshift.k8s:
       state: present   
       definition:
         apiVersion: v1
         kind: Route
         metadata:
           name: frontend
           namespace: guestbook             
         spec:
           to:
             kind: Service
             name: frontend
     # delegate_to: localhost      
